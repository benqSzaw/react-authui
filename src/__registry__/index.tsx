/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable @typescript-eslint/no-explicit-any */
// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.

import * as React from "react";

export const Index: Record<string, any> ={
  "floating-label-input": {
    name: "floating-label-input",
    description: "Material UI floating label input",
    type: "registry:component",
    files: [{
      path: "src/registry/auth/ui/floating-label-input.tsx",
      content: "import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\nimport { Label } from '@radix-ui/react-label';\nimport { Input } from '@/components/ui/input';\n\nexport const FloatingLabel: React.FC<React.ComponentProps<typeof Label>> = ({\n  className,\n  ...props\n}) => {\n  return (\n    <Label\n      className={cn(\n        'peer-has-focus:secondary bg-background absolute start-2 top-2 z-10 origin-[0] -translate-y-4 scale-75 transform cursor-text px-2 text-sm text-gray-500 duration-300 peer-placeholder-shown:top-1/2 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:scale-100 peer-focus:top-2 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:px-2 rtl:peer-focus:left-auto rtl:peer-focus:translate-x-1/4',\n        className,\n      )}\n      {...props}\n    />\n  );\n};\n\nexport const FloatingInput: React.FC<\n  React.ComponentProps<'input'> & {\n    label: string;\n  }\n> = ({ id, label, className, ...props }) => {\n  return (\n    <div className='relative'>\n      <Input\n        id={id}\n        className={cn('peer bg-background', className)}\n        placeholder=' '\n        {...props}\n      />\n      <FloatingLabel htmlFor={id}>{label}</FloatingLabel>\n    </div>\n  );\n};\n",
      type: "registry:component",
    }],
  },
  "form-root-error": {
    name: "form-root-error",
    description: "Show errors from root in use form hook",
    type: "registry:ui",
    files: [{
      path: "src/registry/auth/ui/form-root-error.tsx",
      content: "import { ComponentProps } from 'react';\nimport { useFormState } from 'react-hook-form';\nimport { cn } from '@/lib/utils';\n\nfunction FormRootError({ className, ...props }: ComponentProps<'p'>) {\n  const { errors } = useFormState();\n  const rootError = errors.root;\n  if (!rootError) return null;\n\n  return (\n    <p className={cn('text-destructive text-sm', className)} {...props}>\n      {rootError.message}\n    </p>\n  );\n}\n\nexport { FormRootError };\n",
      type: "registry:ui",
    }],
  },
  "password-input": {
    name: "password-input",
    description: "Input with visibility toggle",
    type: "registry:ui",
    files: [{
      path: "src/registry/auth/ui/password-input.tsx",
      content: "'use client';\nimport { ComponentProps, useState } from 'react';\nimport { EyeIcon, EyeOffIcon } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\n\nfunction PasswordInput(props: Omit<ComponentProps<typeof Input>, 'type'>) {\n  const [isVisible, setIsVisible] = useState(false);\n  const toggleVisibility = () => setIsVisible(!isVisible);\n\n  return (\n    <div className='relative'>\n      <Input type={isVisible ? 'text' : 'password'} {...props} />\n      <Button\n        variant='ghost'\n        size='icon'\n        className='absolute top-1/2 right-1 size-7 -translate-y-1/2'\n        onClick={toggleVisibility}\n        type='button'\n        aria-label={\`\${isVisible ? 'Hide' : 'Show'} password\`}\n      >\n        {isVisible ? <EyeOffIcon /> : <EyeIcon />}\n      </Button>\n    </div>\n  );\n}\n\nexport { PasswordInput };\n",
      type: "registry:ui",
    }],
  },
  "floating-label-input-demo": {
    name: "floating-label-input-demo",
    description: "Material UI floating label input",
    type: "registry:example",
    files: [{
      path: "src/registry/auth/examples/floating-label-input-demo.tsx",
      content: "import { FloatingInput } from '../ui/floating-label-input';\n\nexport default function FloatingLabelInputDemo() {\n  return <FloatingInput label='Demo' />;\n}\n",
      type: "registry:example",
    }],
    component: React.lazy(() => import("@/registry/auth/examples/floating-label-input-demo.tsx")),
    source: "import { FloatingInput } from '../ui/floating-label-input';\n\nexport default function FloatingLabelInputDemo() {\n  return <FloatingInput label='Demo' />;\n}\n",
  },
}